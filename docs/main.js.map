{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/modules/multiselect/multiselect.component.html","webpack:///./src/app/modules/multiselect/multiselect.component.scss","webpack:///./src/app/modules/multiselect/multiselect.component.ts","webpack:///./src/app/modules/multiselect/multiselect.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"header\\\">\\n  <a href=\\\"https://github.com/RignonNoel/angular-multiselect\\\" class=\\\"header__item\\\">\\n    Go to the Github repository\\n  </a>\\n</div>\\n<div class=\\\"content\\\">\\n  Little package to easily select multiple choices of a big set of data. It's perfect for manage ManyToMany relationships in your admin panel for example.\\n\\n  <div class=\\\"content__section\\\">\\n    <div class=\\\"content__section__title\\\">\\n      Demo\\n    </div>\\n    <div class=\\\"content__section__content\\\">\\n      <multiselect [list]=\\\"choicesAvailable\\\"\\n                   [(selected)]=\\\"selectedChoices\\\"\\n                   labelProperty=\\\"name\\\"\\n                   (searchBar)=\\\"filter($event)\\\">\\n      </multiselect>\\n\\n      <p>\\n        It's easy to see the result in realtime with the variable we bind to the component:\\n      </p>\\n      <p>\\n        <b>Number of choices:</b> {{ selectedChoices.length }}<br/>\\n        <b>Last choice:</b>\\n        <span *ngIf=\\\"selectedChoices.length > 0\\\">\\n          {{ selectedChoices[selectedChoices.length - 1].name }}\\n        </span>\\n        <span *ngIf=\\\"selectedChoices.length <= 0\\\">\\n          None\\n        </span>\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".header {\\n  display: flex;\\n  width: 100%;\\n  background-color: #FF4500; }\\n  .header__item {\\n    padding: 20px 20px;\\n    color: white;\\n    text-transform: uppercase;\\n    font-weight: 600;\\n    text-decoration: none;\\n    font-size: 0.8em; }\\n  .header__item:hover {\\n      background-color: #ff8f66; }\\n  .content {\\n  padding: 40px;\\n  min-height: 100vh; }\\n  .content__section {\\n    margin-top: 40px; }\\n  .content__section__title {\\n      border-bottom: 5px double black;\\n      margin-bottom: 30px;\\n      font-weight: 600;\\n      text-transform: uppercase; }\\n  .content__section__content__code {\\n      background-color: lightgrey;\\n      border-color: grey;\\n      color: black;\\n      padding: 15px; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  allChoices = [];\n\n  choicesAvailable = [];\n  selectedChoices = [];\n\n  constructor() {\n    for (let index = 0; index <= 200; index++) {\n      this.allChoices.push(\n        {\n          name: 'Choice ' + index.toString(),\n        }\n      );\n    }\n    this.choicesAvailable = this.allChoices;\n  }\n\n  filter(search) {\n    console.log(search);\n    if (search != '') {\n      this.choicesAvailable = [];\n      for (const item of this.allChoices) {\n        if (item.name.indexOf(search) >= 0) {\n          this.choicesAvailable.push(item);\n        }\n      }\n    } else {\n      this.choicesAvailable = this.allChoices;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {MultiselectModule} from \"./modules/multiselect/multiselect.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    MultiselectModule\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"multiselect\\\">\\n  <input [(ngModel)]=\\\"searchBarText\\\"\\n         class=\\\"multiselect__searchbar\\\"\\n         (keypress)=\\\"triggerSearch()\\\"\\n         type=\\\"text\\\"\\n         [placeholder]=\\\"settings.searchBarPlaceholder\\\"/>\\n  <div class=\\\"multiselect__columns\\\">\\n    <div class=\\\"multiselect__columns__column\\\">\\n      <div class=\\\"multiselect__columns__column__title\\\">\\n        {{ settings.listLabel }}\\n      </div>\\n      <div class=\\\"multiselect__columns__column__list\\\">\\n        <div class=\\\"multiselect__columns__column__list__empty\\\" *ngIf=\\\"!list || list.length < 1\\\">\\n          {{ settings.listEmptyLabel }}\\n        </div>\\n        <div *ngFor=\\\"let item of list\\\" class=\\\"multiselect__columns__column__list__item\\\">\\n          <div *ngIf=\\\"!isSelected(item)\\\" (dblclick)=\\\"select(item)\\\">\\n            {{ item[labelProperty] }}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"multiselect__columns__column\\\">\\n      <div class=\\\"multiselect__columns__column__title\\\">\\n        {{ settings.selectedLabel }}\\n      </div>\\n      <div class=\\\"multiselect__columns__column__list\\\">\\n        <div class=\\\"multiselect__columns__column__list__empty\\\" *ngIf=\\\"!selected || selected.length < 1\\\">\\n          {{ settings.selectedEmptyLabel }}\\n        </div>\\n        <div *ngFor=\\\"let item of selected\\\"  (dblclick)=\\\"unselect(item)\\\" class=\\\"multiselect__columns__column__list__item\\\">\\n          {{ item[labelProperty] }}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".multiselect__searchbar {\\n  box-sizing: border-box;\\n  border: 1px solid lightgrey;\\n  padding: 10px;\\n  width: 100%;\\n  background: none;\\n  color: black; }\\n\\n.multiselect__columns {\\n  display: flex;\\n  justify-content: space-between; }\\n\\n.multiselect__columns__column {\\n    flex: 1;\\n    margin-top: 20px;\\n    margin-right: 30px; }\\n\\n.multiselect__columns__column:last-child {\\n      margin-right: 0; }\\n\\n.multiselect__columns__column__title {\\n      text-transform: uppercase;\\n      font-weight: 600;\\n      font-size: 0.8em; }\\n\\n.multiselect__columns__column__list {\\n      height: 150px;\\n      border: 1px solid lightgrey;\\n      overflow: auto; }\\n\\n.multiselect__columns__column__list__item {\\n        padding: 0 5px; }\\n\\n.multiselect__columns__column__list__item:hover {\\n          background-color: lightgrey;\\n          cursor: pointer; }\\n\\n.multiselect__columns__column__list__empty {\\n        height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        background-color: lightgrey; }\\n\"","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'multiselect',\n  templateUrl: './multiselect.component.html',\n  styleUrls: ['./multiselect.component.scss']\n})\nexport class MultiselectComponent implements OnInit, OnChanges {\n\n  @Input() labelProperty = 'label';\n  @Input() selected: any[] = [];\n  @Input() list: any[] = [];\n  @Input() settings;\n\n  typingTimer;\n  doneTypingInterval = 1500;\n  searchBarText: string;\n\n  @Output() searchBar: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    if (!this.settings) {\n      this.settings = {\n        searchBarPlaceholder: 'Type here to filter the list..',\n        listLabel: 'List of choices',\n        listEmptyLabel: 'No choices available',\n        selectedLabel: 'Selected choices',\n        selectedEmptyLabel: 'No choice selected',\n      }\n    }\n  }\n\n  ngOnChanges() {}\n\n  isSelected(item) {\n    const index = this.selected.indexOf(item);\n    if (index > -1) {\n      return true;\n    }\n  }\n\n  triggerSearch() {\n    clearTimeout(this.typingTimer);\n    this.typingTimer = setTimeout(\n      () => {\n        this.filterList();\n      },\n      this.doneTypingInterval\n    );\n  }\n\n  filterList() {\n    this.searchBar.emit(this.searchBarText);\n  }\n\n  select(item) {\n    this.selected.push(item);\n  }\n\n  unselect(item) {\n    const index = this.selected.indexOf(item);\n    if (index > -1) {\n      this.selected.splice(index, 1);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MultiselectComponent } from './multiselect.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  declarations: [\n    MultiselectComponent,\n  ],\n  exports: [\n    MultiselectComponent,\n  ]\n})\nexport class MultiselectModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}